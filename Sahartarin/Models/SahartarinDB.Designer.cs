//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Link_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.Category), "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Link), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Comments_Link", "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.Link), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Comment), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Comments_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.User), "Comments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Comment), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Link_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.User), "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Link), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "PopularLink_link", "PopularLink", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Sahartarin.Models.PopularLink), "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Link), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Tag_Link_Links", "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.Link), "Tag_Link", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Tag_Link), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Vote_Link", "Link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.Link), "Votes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Vote), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "PopularLink_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.User), "PopularLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.PopularLink), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Tag_Link_Tags", "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.Tag), "Tag_Link", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Tag_Link), true)]
[assembly: EdmRelationshipAttribute("sahartarinDBModel", "Vote_user", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Sahartarin.Models.User), "Votes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Sahartarin.Models.Vote), true)]

#endregion

namespace Sahartarin.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class sahartarinDBO : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new sahartarinDBO object using the connection string found in the 'sahartarinDBO' section of the application configuration file.
        /// </summary>
        public sahartarinDBO() : base("name=sahartarinDBO", "sahartarinDBO")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new sahartarinDBO object.
        /// </summary>
        public sahartarinDBO(string connectionString) : base(connectionString, "sahartarinDBO")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new sahartarinDBO object.
        /// </summary>
        public sahartarinDBO(EntityConnection connection) : base(connection, "sahartarinDBO")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Link> Links
        {
            get
            {
                if ((_Links == null))
                {
                    _Links = base.CreateObjectSet<Link>("Links");
                }
                return _Links;
            }
        }
        private ObjectSet<Link> _Links;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PopularLink> PopularLinks
        {
            get
            {
                if ((_PopularLinks == null))
                {
                    _PopularLinks = base.CreateObjectSet<PopularLink>("PopularLinks");
                }
                return _PopularLinks;
            }
        }
        private ObjectSet<PopularLink> _PopularLinks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag_Link> Tag_Link
        {
            get
            {
                if ((_Tag_Link == null))
                {
                    _Tag_Link = base.CreateObjectSet<Tag_Link>("Tag_Link");
                }
                return _Tag_Link;
            }
        }
        private ObjectSet<Tag_Link> _Tag_Link;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vote> Votes
        {
            get
            {
                if ((_Votes == null))
                {
                    _Votes = base.CreateObjectSet<Vote>("Votes");
                }
                return _Votes;
            }
        }
        private ObjectSet<Vote> _Votes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Links EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinks(Link link)
        {
            base.AddObject("Links", link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PopularLinks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPopularLinks(PopularLink popularLink)
        {
            base.AddObject("PopularLinks", popularLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tag_Link EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTag_Link(Tag_Link tag_Link)
        {
            base.AddObject("Tag_Link", tag_Link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Votes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVotes(Vote vote)
        {
            base.AddObject("Votes", vote);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String categoryName)
        {
            Category category = new Category();
            category.ID = id;
            category.CategoryName = categoryName;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Link_Category", "Link")]
        public EntityCollection<Link> Links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("sahartarinDBModel.Link_Category", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("sahartarinDBModel.Link_Category", "Link", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="linkid">Initial value of the linkid property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="vote_sNumber">Initial value of the Vote_sNumber property.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.String content, global::System.Int32 userid, global::System.Int32 linkid, global::System.DateTime time, global::System.Int32 vote_sNumber)
        {
            Comment comment = new Comment();
            comment.ID = id;
            comment.Content = content;
            comment.userid = userid;
            comment.linkid = linkid;
            comment.Time = time;
            comment.Vote_sNumber = vote_sNumber;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                if (_Content != value)
                {
                    OnContentChanging(value);
                    ReportPropertyChanging("Content");
                    _Content = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Content");
                    OnContentChanged();
                }
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                if (_userid != value)
                {
                    OnuseridChanging(value);
                    ReportPropertyChanging("userid");
                    _userid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userid");
                    OnuseridChanged();
                }
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 linkid
        {
            get
            {
                return _linkid;
            }
            set
            {
                if (_linkid != value)
                {
                    OnlinkidChanging(value);
                    ReportPropertyChanging("linkid");
                    _linkid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("linkid");
                    OnlinkidChanged();
                }
            }
        }
        private global::System.Int32 _linkid;
        partial void OnlinkidChanging(global::System.Int32 value);
        partial void OnlinkidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                if (_Time != value)
                {
                    OnTimeChanging(value);
                    ReportPropertyChanging("Time");
                    _Time = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Time");
                    OnTimeChanged();
                }
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vote_sNumber
        {
            get
            {
                return _Vote_sNumber;
            }
            set
            {
                if (_Vote_sNumber != value)
                {
                    OnVote_sNumberChanging(value);
                    ReportPropertyChanging("Vote_sNumber");
                    _Vote_sNumber = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Vote_sNumber");
                    OnVote_sNumberChanged();
                }
            }
        }
        private global::System.Int32 _Vote_sNumber;
        partial void OnVote_sNumberChanging(global::System.Int32 value);
        partial void OnVote_sNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Comments_Link", "Link")]
        public Link Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Comments_Link", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Comments_Link", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> LinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Comments_Link", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("sahartarinDBModel.Comments_Link", "Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Comments_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Comments_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Comments_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Comments_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("sahartarinDBModel.Comments_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="Link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Link object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="uRL">Initial value of the URL property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="sendingTime">Initial value of the SendingTime property.</param>
        public static Link CreateLink(global::System.Int32 id, global::System.String title, global::System.String description, global::System.String uRL, global::System.Int32 userID, global::System.Int32 categoryID, global::System.DateTime sendingTime)
        {
            Link link = new Link();
            link.ID = id;
            link.Title = title;
            link.Description = description;
            link.URL = uRL;
            link.UserID = userID;
            link.CategoryID = categoryID;
            link.SendingTime = sendingTime;
            return link;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SendingTime
        {
            get
            {
                return _SendingTime;
            }
            set
            {
                OnSendingTimeChanging(value);
                ReportPropertyChanging("SendingTime");
                _SendingTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendingTime");
                OnSendingTimeChanged();
            }
        }
        private global::System.DateTime _SendingTime;
        partial void OnSendingTimeChanging(global::System.DateTime value);
        partial void OnSendingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Popular_LinkID
        {
            get
            {
                return _Popular_LinkID;
            }
            set
            {
                OnPopular_LinkIDChanging(value);
                ReportPropertyChanging("Popular_LinkID");
                _Popular_LinkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Popular_LinkID");
                OnPopular_LinkIDChanged();
            }
        }
        private Nullable<global::System.Int32> _Popular_LinkID;
        partial void OnPopular_LinkIDChanging(Nullable<global::System.Int32> value);
        partial void OnPopular_LinkIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Link_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("sahartarinDBModel.Link_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("sahartarinDBModel.Link_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("sahartarinDBModel.Link_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("sahartarinDBModel.Link_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Comments_Link", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("sahartarinDBModel.Comments_Link", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("sahartarinDBModel.Comments_Link", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Link_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Link_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Link_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Link_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("sahartarinDBModel.Link_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "PopularLink_link", "PopularLink")]
        public PopularLink PopularLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopularLink>("sahartarinDBModel.PopularLink_link", "PopularLink").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopularLink>("sahartarinDBModel.PopularLink_link", "PopularLink").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PopularLink> PopularLinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PopularLink>("sahartarinDBModel.PopularLink_link", "PopularLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PopularLink>("sahartarinDBModel.PopularLink_link", "PopularLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Tag_Link_Links", "Tag_Link")]
        public EntityCollection<Tag_Link> Tag_Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag_Link>("sahartarinDBModel.Tag_Link_Links", "Tag_Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag_Link>("sahartarinDBModel.Tag_Link_Links", "Tag_Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Vote_Link", "Votes")]
        public EntityCollection<Vote> Votes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vote>("sahartarinDBModel.Vote_Link", "Votes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vote>("sahartarinDBModel.Vote_Link", "Votes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="PopularLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PopularLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PopularLink object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="imageP">Initial value of the ImageP property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static PopularLink CreatePopularLink(global::System.Int32 id, global::System.String title, global::System.Byte[] imageP, global::System.String description, global::System.Int32 userId)
        {
            PopularLink popularLink = new PopularLink();
            popularLink.ID = id;
            popularLink.Title = title;
            popularLink.ImageP = imageP;
            popularLink.Description = description;
            popularLink.UserId = userId;
            return popularLink;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageP
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageP);
            }
            set
            {
                OnImagePChanging(value);
                ReportPropertyChanging("ImageP");
                _ImageP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageP");
                OnImagePChanged();
            }
        }
        private global::System.Byte[] _ImageP;
        partial void OnImagePChanging(global::System.Byte[] value);
        partial void OnImagePChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "PopularLink_link", "Link")]
        public EntityCollection<Link> Links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("sahartarinDBModel.PopularLink_link", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("sahartarinDBModel.PopularLink_link", "Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "PopularLink_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.PopularLink_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.PopularLink_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.PopularLink_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("sahartarinDBModel.PopularLink_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String tagName)
        {
            Tag tag = new Tag();
            tag.ID = id;
            tag.TagName = tagName;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Tag_Link_Tags", "Tag_Link")]
        public EntityCollection<Tag_Link> Tag_Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag_Link>("sahartarinDBModel.Tag_Link_Tags", "Tag_Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag_Link>("sahartarinDBModel.Tag_Link_Tags", "Tag_Link", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="Tag_Link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag_Link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag_Link object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="tagid">Initial value of the tagid property.</param>
        /// <param name="linkid">Initial value of the linkid property.</param>
        public static Tag_Link CreateTag_Link(global::System.Int32 id, global::System.Int32 tagid, global::System.Int32 linkid)
        {
            Tag_Link tag_Link = new Tag_Link();
            tag_Link.ID = id;
            tag_Link.tagid = tagid;
            tag_Link.linkid = linkid;
            return tag_Link;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tagid
        {
            get
            {
                return _tagid;
            }
            set
            {
                OntagidChanging(value);
                ReportPropertyChanging("tagid");
                _tagid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tagid");
                OntagidChanged();
            }
        }
        private global::System.Int32 _tagid;
        partial void OntagidChanging(global::System.Int32 value);
        partial void OntagidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 linkid
        {
            get
            {
                return _linkid;
            }
            set
            {
                OnlinkidChanging(value);
                ReportPropertyChanging("linkid");
                _linkid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("linkid");
                OnlinkidChanged();
            }
        }
        private global::System.Int32 _linkid;
        partial void OnlinkidChanging(global::System.Int32 value);
        partial void OnlinkidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Tag_Link_Links", "Link")]
        public Link Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Tag_Link_Links", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Tag_Link_Links", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> LinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Tag_Link_Links", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("sahartarinDBModel.Tag_Link_Links", "Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Tag_Link_Tags", "Tags")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("sahartarinDBModel.Tag_Link_Tags", "Tags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("sahartarinDBModel.Tag_Link_Tags", "Tags").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("sahartarinDBModel.Tag_Link_Tags", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("sahartarinDBModel.Tag_Link_Tags", "Tags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="webSite">Initial value of the WebSite property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String webSite, global::System.String country, global::System.String userName)
        {
            User user = new User();
            user.ID = id;
            user.WebSite = webSite;
            user.Country = country;
            user.UserName = userName;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WebSite
        {
            get
            {
                return _WebSite;
            }
            set
            {
                OnWebSiteChanging(value);
                ReportPropertyChanging("WebSite");
                _WebSite = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WebSite");
                OnWebSiteChanged();
            }
        }
        private global::System.String _WebSite;
        partial void OnWebSiteChanging(global::System.String value);
        partial void OnWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Comments_User", "Comments")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("sahartarinDBModel.Comments_User", "Comments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("sahartarinDBModel.Comments_User", "Comments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Link_User", "Link")]
        public EntityCollection<Link> Links
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Link>("sahartarinDBModel.Link_User", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Link>("sahartarinDBModel.Link_User", "Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "PopularLink_User", "PopularLink")]
        public EntityCollection<PopularLink> PopularLinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PopularLink>("sahartarinDBModel.PopularLink_User", "PopularLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PopularLink>("sahartarinDBModel.PopularLink_User", "PopularLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Vote_user", "Votes")]
        public EntityCollection<Vote> Votes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vote>("sahartarinDBModel.Vote_user", "Votes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vote>("sahartarinDBModel.Vote_user", "Votes", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="sahartarinDBModel", Name="Vote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vote object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userid">Initial value of the Userid property.</param>
        /// <param name="linkid">Initial value of the Linkid property.</param>
        /// <param name="isPositive">Initial value of the IsPositive property.</param>
        public static Vote CreateVote(global::System.Int32 id, global::System.Int32 userid, global::System.Int32 linkid, global::System.Boolean isPositive)
        {
            Vote vote = new Vote();
            vote.ID = id;
            vote.Userid = userid;
            vote.Linkid = linkid;
            vote.IsPositive = isPositive;
            return vote;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Userid
        {
            get
            {
                return _Userid;
            }
            set
            {
                OnUseridChanging(value);
                ReportPropertyChanging("Userid");
                _Userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Userid");
                OnUseridChanged();
            }
        }
        private global::System.Int32 _Userid;
        partial void OnUseridChanging(global::System.Int32 value);
        partial void OnUseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Linkid
        {
            get
            {
                return _Linkid;
            }
            set
            {
                OnLinkidChanging(value);
                ReportPropertyChanging("Linkid");
                _Linkid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Linkid");
                OnLinkidChanged();
            }
        }
        private global::System.Int32 _Linkid;
        partial void OnLinkidChanging(global::System.Int32 value);
        partial void OnLinkidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPositive
        {
            get
            {
                return _IsPositive;
            }
            set
            {
                OnIsPositiveChanging(value);
                ReportPropertyChanging("IsPositive");
                _IsPositive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPositive");
                OnIsPositiveChanged();
            }
        }
        private global::System.Boolean _IsPositive;
        partial void OnIsPositiveChanging(global::System.Boolean value);
        partial void OnIsPositiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Vote_Link", "Link")]
        public Link Link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Vote_Link", "Link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Vote_Link", "Link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Link> LinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Link>("sahartarinDBModel.Vote_Link", "Link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Link>("sahartarinDBModel.Vote_Link", "Link", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("sahartarinDBModel", "Vote_user", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Vote_user", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Vote_user", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("sahartarinDBModel.Vote_user", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("sahartarinDBModel.Vote_user", "User", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
